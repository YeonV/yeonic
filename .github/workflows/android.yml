name: Build Android
run-name: Creating Production Ready Android App ðŸš€
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Create Release'
        default: 'Yes'
        required: false
        type: choice
        options:
          - 'Yes'
          - 'No'

  push:
    branches:
      - main

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: install dependencies
        run: npm ci

      - name: Create Build Folder
        run: npm run build

      - name: Add android folder if not present
        run: if [ ! -d "./android" ]; then npx cap add android; fi

      - name: Capacitor update
        run: npx cap update

      - name: Capacitor copy
        run: npx cap copy

      - name: Generate icons and splash screen to android folder
        run: if [ -d "./resources" ]; then npm install @capacitor/assets --save-dev && npx capacitor-assets generate --android; fi

      - name: Build app bundle
        run: cd android && ./gradlew bundle && ./gradlew assembleDebug

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Sign dev build
        run: jarsigner -keystore android/release.decrypted.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/build/outputs/bundle/release/app-release-signed.aab ./android/app/build/outputs/bundle/release/app-release.aab blade

      - name: Check folder content of android output
        run: ls ./android/app/build/outputs/bundle/release

      - name: Upload release bundle
        if: (startsWith(github.event.head_commit.message, 'Release') != true) || github.event.inputs.release == 'No'
        uses: actions/upload-artifact@v3
        with:
          name: yeonic
          path: ./android/app/build/outputs/bundle/release/app-release-signed.aab
          retention-days: 60

      - name: Upload debug bundle
        if: (startsWith(github.event.head_commit.message, 'Release') != true) || github.event.inputs.release == 'No'
        uses: actions/upload-artifact@v3
        with:
          name: yeonic-debug
          path: ./android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 60

      - name: Set Tag
        if: startsWith(github.event.head_commit.message, 'Release') || github.event.inputs.release == 'Yes'
        id: current-datetime
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d-%H_%M_%S%z')" >> "$GITHUB_OUTPUT"

      - name: Create Release
        if: startsWith(github.event.head_commit.message, 'Release') || github.event.inputs.release == 'Yes'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.current-datetime.outputs.CURRENT_DATETIME }}
          release_name: Release ${{ steps.current-datetime.outputs.CURRENT_DATETIME }}
          body: ${{ steps.current-datetime.outputs.CURRENT_DATETIME }}
          draft: false
          prerelease: true

      - name: Upload Android-APK to Release
        if: startsWith(github.event.head_commit.message, 'Release') || github.event.inputs.release == 'Yes'
        uses: YeonV/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android/app/build/outputs/bundle/release/app-release-signed.aab
          asset_name: yeonic.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Debug-Android-APK to Release
        if: startsWith(github.event.head_commit.message, 'Release') || github.event.inputs.release == 'Yes'
        uses: YeonV/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: yeonic-debug.apk
          asset_content_type: application/vnd.android.package-archive
